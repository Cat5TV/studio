#!/bin/bash

# Actual realtime live status
api=https://live.cat5.tv/api/realtime

# Toggle between on and off-air every 30 seconds
#api=https://live.cat5.tv/api/test

# Which GPIO pin to use for live light
pin_live=26 # Relay Channel 6

# Configure Wi-Fi Check

pin_robbie=21 # Relay Channel 1
pin_bekah=22 # Relay Channel 2
pin_sasha=23 # Relay Channel 3
pin_jeff=24 # Relay Channel 4
# Still have Pin 25 / Relay Channel 5 free for future expansion

ip_robbie=10.0.0.50
ip_bekah=10.0.0.53
ip_sasha=10.0.0.52
ip_jeff=10.0.0.51


  if [[ -e /usr/local/bin/gpio ]]; then

    # Setup GPIO

      # Set the pin for output
      /usr/local/bin/gpio -g mode $pin_live output > /dev/null 2>&1

      # Clear light state (turn off the power to GPIO pin)
      /usr/local/bin/gpio -g write $pin_live 0 > /dev/null 2>&1

      lastlive=3 # An impossible scenario, so first run will always not match
      lastrobbie=3
      lastsasha=3
      lastjeff=3

      verbiage_negative="is not at"
      verbiage_positive="is"
      while :
      do

        # Live Light
        live=$(wget $api -q -O -)
        if [[ $live != $lastlive ]]; then
          stamp=$(date +"%r %A %B %d, %Y")
          if [[ $lastlive == "3" ]]; then
            echo "$stamp - Script Started."
          fi
          if [[ $live == "0" ]]; then
            echo "$stamp - Category5 is Off Air."
            /usr/local/bin/gpio -g write $pin_live 0 > /dev/null 2>&1
          elif [[ $live == "1" ]]; then
            echo "$stamp - Category5 is On Air."
            /usr/local/bin/gpio -g write $pin_live 1 > /dev/null 2>&1
          else
            # We didn't get either a 0 or 1 reply from the API
            # Test to see if Internet is down
            wget -q --spider https://google.com/
            if [ $? -eq 0 ]; then
              # Don't change lamp state, just in case the API went offline for a moment
              # Just log the issue
              echo "$stamp - API Didn't Respond Correctly Even Though Internet is Online - State Unknown"
            else
              # The failed response is due to an Internet outage, so turn off the light
              # We can't possibly be on the air if our Internet is down
              echo "$stamp - Category5 is Off Air Due to Internet Outage."
              /usr/local/bin/gpio -g write $pin_live 0 > /dev/null 2>&1
            fi
          fi
          lastlive=$live
        fi

        # WiFi Check

        robbie=$(./ping $ip_robbie)
        if [[ $robbie != $lastrobbie ]]; then
          if [[ $robbie == 0 ]]; then
            echo "$stamp - Robbie $verbiage_negative the studio.";
            /usr/local/bin/gpio -g write $pin_robbie 0 > /dev/null 2>&1
          else
            echo "$stamp - Robbie $verbiage_positive at the studio.";
            /usr/local/bin/gpio -g write $pin_robbie 1 > /dev/null 2>&1
          fi
          lastrobbie=$robbie
        fi

        bekah=$(./ping $ip_bekah)
        if [[ $bekah != $lastbekah ]]; then
          if [[ $bekah == 0 ]]; then
            echo "$stamp - Bekah $verbiage_negative the studio.";
            /usr/local/bin/gpio -g write $pin_bekah 0 > /dev/null 2>&1
          else
            echo "$stamp - Bekah $verbiage_positive at the studio.";
            /usr/local/bin/gpio -g write $pin_bekah 1 > /dev/null 2>&1
          fi
          lastbekah=$bekah
        fi

        sasha=$(./ping $ip_sasha)
        if [[ $sasha != $lastsasha ]]; then
          if [[ $sasha == 0 ]]; then
            echo "$stamp - Sasha $verbiage_negative the studio.";
            /usr/local/bin/gpio -g write $pin_sasha 0 > /dev/null 2>&1
          else
            echo "$stamp - Sasha $verbiage_positive at the studio.";
            /usr/local/bin/gpio -g write $pin_sasha 1 > /dev/null 2>&1
          fi
          lastsasha=$sasha
        fi

        jeff=$(./ping $ip_jeff)
        if [[ $jeff != $lastjeff ]]; then
          if [[ $jeff == 0 ]]; then
            echo "$stamp - Jeff $verbiage_negative the studio.";
            /usr/local/bin/gpio -g write $pin_jeff 0 > /dev/null 2>&1
          else
            echo "$stamp - Jeff $verbiage_positive at the studio.";
            /usr/local/bin/gpio -g write $pin_jeff 1 > /dev/null 2>&1
          fi
          lastjeff=$jeff
        fi

        verbiage_negative="has left"
        verbiage_positive="has arrived"
      done

  else

    echo "Installing needed components..."

    if [[ ! -e /usr/bin/git ]]; then
      apt -y install git
    fi

    if [[ ! -d /usr/local/bin/gpio ]]; then
      apt-get -y install libc6-dev
      cd /tmp
      git clone https://github.com/Cat5TV/WiringPi
      cd WiringPi
      ./build # The build process places the compiled gpio application in /usr/local/bin/
      rm -rf /tmp/wiringPi
    fi

    echo "Finished. Please run again."

  fi


