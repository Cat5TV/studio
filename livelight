#!/bin/bash

# Actual realtime live status
api=https://live.cat5.tv/api/realtime

# Toggle between on and off-air every 30 seconds
#api=https://live.cat5.tv/api/test

# Which GPIO pin to use
pin=18


  if [[ -e /usr/local/bin/gpio ]]; then

    # Setup GPIO

      # Set the pin for output
      /usr/local/bin/gpio -g mode $pin output > /dev/null 2>&1

      # Clear light state (turn off the power to GPIO pin)
      /usr/local/bin/gpio -g write $pin 0 > /dev/null 2>&1

      lastlive=3 # An impossible scenario, so first run will always not match

      while :
      do
        live=$(wget $api -q -O -)
        if [[ $live != $lastlive ]]; then
          stamp=$(date +"%r %A %B %d, %Y")
          if [[ $lastlive == "3" ]]; then
            echo "$stamp - Script Started"
          fi
          if [[ $live == "0" ]]; then
            echo "$stamp - Off-Air"
            /usr/local/bin/gpio -g write $pin 0 > /dev/null 2>&1
          elif [[ $live == "1" ]]; then
            echo "$stamp - On-Air"
            /usr/local/bin/gpio -g write $pin 1 > /dev/null 2>&1
          else
            echo "$stamp - Unknown: $live"
          fi
          lastlive=$live
        fi
        sleep 10
      done

  else

    echo "Installing needed components..."

    if [[ ! -e /usr/bin/git ]]; then
      apt -y install git
    fi

    if [[ ! -d /usr/local/bin/gpio ]]; then
      apt-get -y install libc6-dev
      cd /tmp
      git clone https://github.com/Cat5TV/WiringPi
      cd WiringPi
      ./build # The build process places the compiled gpio application in /usr/local/bin/
      rm -rf /tmp/wiringPi
    fi

    echo "Finished. Please run again."

  fi


